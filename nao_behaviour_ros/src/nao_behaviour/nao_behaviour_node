#!/usr/bin/env python

import rospy
import actionlib

from std_srvs.srv import Empty
from nao_behaviour.srv import Default, sayText
from nao_walk.msg import behaviourAction, behaviourGoal, speekAction, speekGoal

from geometry_msgs.msg import PoseStamped
from move_base_msgs.msg import MoveBaseAction, MoveBaseGoal

rospy.init_node('nao_behaviours')

behClient = actionlib.SimpleActionClient('/behaviour_execution', behaviourAction)
behClient.wait_for_server()

speekClient = actionlib.SimpleActionClient('/speed_execution', speekAction)
speekClient.wait_for_server()

goalClient = actionlib.SimpleActionClient('/move_base', MoveBaseAction)

behaviours_str=[
    'crouch',
    'wakeUp',
    'macarena',
    'ballTracker',    
    'danceEvolution',
    'gangnamStyle',
    'vangelis',
    'tired',
    'warmHello',    
    'taichi',
    'eyeOfTheTiger'
]

def speek_cb(req):
    print(req)
    goal=speekGoal()
    goal.text=req.request
    #goal.target_pose.pose=pose.pose    
    print(req.request)
    speekClient.send_goal(goal)    
    speekClient.wait_for_result()
    print('Done')
    return 'Done'
    

def goal_cb(pose):    
    goal=MoveBaseGoal()
    goal.target_pose.pose=pose.pose    
    goalClient.send_goal(goal)    
    
def service_cb(req):
    srv_name = req._connection_header['service']
    beh_str=srv_name.split('/')[-1]
    print(beh_str)
    beh_id = -1
    i = 0
    for beh_entry in behaviours_str:
        if beh_entry == beh_str:
            beh_id = i
        i = i + 1
    print(beh_id)
    
    goal=behaviourGoal()
    goal.behaviour_id = beh_id
    print("send goal")
    behClient.send_goal(goal)
    behClient.wait_for_result()
    
    return 'Done'



services = []

#goalClient.wait_for_server(rospy.Duration.from_sec(3.0))

for beh in behaviours_str:
    services.append(rospy.Service("/nao_behaviours/"+beh, Default,service_cb) )

services.append(rospy.Service("/nao_speak/", sayText,speek_cb) )

rospy.Subscriber("goal", PoseStamped, goal_cb)
rospy.spin() 
